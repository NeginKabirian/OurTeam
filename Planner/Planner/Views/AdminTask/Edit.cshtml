@* @model Planner.Models.TaskItem

@{
    ViewData["Title"] = "Edit Task";
}

<div class="container mt-5">
    <div class="card shadow rounded-4">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Edit Task</h3>
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post">
                <input type="hidden" asp-for="Id" />

                <div class="mb-3">
                    <label asp-for="Title" class="form-label fw-bold">Title</label>
                    <input asp-for="Title" class="form-control rounded-pill" placeholder="Enter task title" />
                    <span asp-validation-for="Title" class="text-danger small"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Deadline" class="form-label fw-bold">Deadline</label>
                    <input asp-for="Deadline" type="datetime-local" class="form-control rounded-pill" />
                    <span asp-validation-for="Deadline" class="text-danger small"></span>
                </div>

                <div class="form-check form-switch mb-3">
                    <input asp-for="IsCompleted" class="form-check-input" type="checkbox" role="switch" />
                    <label asp-for="IsCompleted" class="form-check-label fw-bold">Is Completed?</label>
                </div>

                <div class="mb-3">
                    <label asp-for="UserId" class="form-label fw-bold">Assign User</label>
                    <select asp-for="UserId" class="form-select rounded-pill">
                        <option value="">-- Select a user --</option>
                        @foreach (var user in ViewBag.Users)
                        {
                            <option value="@user.Id" selected="@(user.Id == Model.UserId)">
                                @user.Name
                            </option>
                        }
                    </select>
                    <span asp-validation-for="UserId" class="text-danger small"></span>
                </div>

                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-success rounded-pill px-4">Save</button>
                    <a asp-action="Index" class="btn btn-outline-secondary rounded-pill px-4">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
 *@
 @model Planner.Models.TaskItem

@{
    ViewData["Title"] = "Edit Task";
}

<h2>Edit Task</h2>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />

    <div class="mb-3">
        <label asp-for="Title" class="form-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Deadline" class="form-label"></label>
        <input asp-for="Deadline" type="datetime-local" class="form-control" />
        <span asp-validation-for="Deadline" class="text-danger"></span>
    </div>

    <div class="form-check mb-3">
        <input asp-for="IsCompleted" class="form-check-input" type="checkbox" id="isCompletedCheck" />
        <label asp-for="IsCompleted" class="form-check-label ms-2" for="isCompletedCheck">
            @Html.DisplayNameFor(model => model.IsCompleted)
        </label>
    </div>


    <div class="mb-3">
        <label asp-for="UserId" class="form-label">Assign User</label>
        <select asp-for="UserId" class="form-select">
            <option value="">Select a user</option>
            @foreach (var user in ViewBag.Users)
            {
                <option value="@user.Id" selected="@(user.Id == Model.UserId)">
                    @user.Name
                </option>
            }
        </select>
        <span asp-validation-for="UserId" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
